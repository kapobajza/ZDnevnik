name: zdnevnik

services:
  api:
    build:
      dockerfile: ./apps/api/Dockerfile
      target: local
    depends_on:
      postgres_db:
        condition: service_healthy
    restart: always
    env_file: ./apps/api/.env.local
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.zdnevnik.local`)"
      - "traefik.http.routers.api.entrypoints=webproxy"
      - "traefik.http.services.api.loadbalancer.server.port=5050"
    develop:
      watch:
        - action: sync+restart
          path: ./apps/api
          target: /app/apps/api
        - action: rebuild
          path: ./apps/api/package.json
          target: /app/apps/api

  postgres_db:
    image: postgres:15
    restart: always
    env_file: ./db/.env.local
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 20s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    labels:
      - "promtail=true"
    ports:
      - 5435:5432

  web:
    build:
      dockerfile: ./apps/sveltastic/Dockerfile
      target: local
    depends_on:
      - api
    restart: always
    env_file: ./apps/sveltastic/.env.local
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`zdnevnik.local`)"
      - "traefik.http.routers.web.entrypoints=webproxy"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./apps/sveltastic
          target: /app/apps/sveltastic
          ignore:
            - ./apps/sveltastic/node_modules/
            - ./apps/sveltastic/build/
            - ./apps/sveltastic/.svelte-kit/

  reverse_proxy:
    image: traefik:v3.1
    restart: unless-stopped
    command:
      # HTTP to HTTPS global redirection
      - "--entrypoints.webproxy.address=:80"
      # Docker configuration
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--log.level=DEBUG"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=webproxy"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  postgres_data:
