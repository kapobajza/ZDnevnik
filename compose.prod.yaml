services:
  reverse_proxy:
    image: traefik:v3.1
    restart: unless-stopped
    command:
      # HTTP to HTTPS global redirection
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      # Dynamic configuration file for certs
      - "--providers.file.filename=/etc/traefik/dynamic/certs-config.yaml"
      # Docker configuration
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-network"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.swarmMode=false"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.service=api@internal"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/certs-config.yaml:/etc/traefik/dynamic/certs-config.yaml:ro
      - ./traefik/certs:/etc/certs:ro

  postgres_db: !reset null

  api:
    image: ghcr.io/kapobajza/zdnevnik_api:prod
    depends_on:
      postgres_db: !reset null
    env_file: ./apps/api/.env.prod
    deploy:
      replicas: 3
    labels:
      - "promtail=true"
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.zdnevnik.com`)"
      - "traefik.http.routers.api.entrypoints=web"
    ports:
      - "5050:5050"

  web:
    image: ghcr.io/kapobajza/zdnevnik_web:prod
    env_file: ./apps/sveltastic/.env.prod
    labels:
      - "promtail=true"
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`zdnevnik.com`)"
      - "traefik.http.routers.web.entrypoints=web"
    deploy:
      replicas: 3

volumes:
  caddy_data:
  caddy_config:
  postgres_data: !reset null
